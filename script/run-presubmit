#!/bin/bash
#
# Copyright (C) Extensible Service Proxy Authors
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
################################################################################
#

ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
. ${ROOT}/script/jenkins-utilities || { echo "Cannot load jenkins-utilities"; exit 1; }
. ${ROOT}/script/presubmits || { echo "Cannot load presubmits"; exit 1; }

LOG_DIR=''
RESULT=1
RUN_ID=''
SCENARIO=''

# Logs command output to a file and return exit code
function log_output() {
  "${@}"  2>&1 | tee "${LOG_FILE}"
  return ${PIPESTATUS[0]}
}


while getopts :b:d:r:s: arg; do
  case ${arg} in
    b) BUCKET="${OPTARG}";;
    d) LOG_DIR="${OPTARG}";;
    r) RUN_ID="${OPTARG}";;
    s) SCENARIO="${OPTARG}";;
    *) echo "Invalid option: -${OPTARG}";;
  esac
done

[[ -z "${RUN_ID}" ]] && RUN_ID="${SCENARIO}-$(date +"%Y%m%d%H%M%S")"
[[ -z "${LOG_DIR}" ]] && LOG_DIR="$(mktemp -d /tmp/presubmits.XXXXX)"

LOG_FILE="${LOG_DIR}/${SCENARIO}.log"
JSON_FILE="${LOG_DIR}/${SCENARIO}.json"

case $SCENARIO in
  asan) log_output asan;;
  build-and-test) log_output build_and_test;;
  check-files) log_output check_files;;
  coverage) log_output coverage;;
  docker-tests) log_output docker_tests;;
  release) log_output release;;
  tsan) log_output tsan;;
  *) error_exit "Usage: run-presubmit -s build-and-test|asan|tsan|coverage|docker-tests";;
esac
RESULT=$?

if [[ -n "${BUCKET}" ]] ; then
  REMOTE_LOG_DIR="${BUCKET}/${RUN_ID}"
  create_status_file \
    -f "${JSON_FILE}" \
    -s ${RESULT} \
    -t "${SCENARIO}" \
    -r "${RUN_ID}" \
    || error_exit "Could not create ${JSON_FILE}."
  echo "Uploading logs to ${BUCKET}."
  upload_logs "${REMOTE_LOG_DIR}" "${LOG_DIR}"
fi
exit ${RESULT}
