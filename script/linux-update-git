#!/bin/bash
#
# Copyright (C) Extensible Service Proxy Authors
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
################################################################################
#

if [[ "$(uname)" != "Linux" ]]; then
  echo "Run on Linux only."
  exit 1
fi

FETCH=${FETCH:-""}

while getopts f: arg; do
  case ${arg} in
    f) FETCH="${OPTARG}";;
  esac
done

rm -rf .git-credential-cache/

echo "Authenticating to googlesource.com."
if [[ ! -d ./gcompute-tools ]]; then
  echo "Cloning gcompute-tools."
  git clone https://gerrit.googlesource.com/gcompute-tools
else
  (cd ./gcompute-tools && git pull --rebase)
fi

gcompute-tools/git-cookie-authdaemon --nofork &
trap 'kill %gcompute-tools/git-cookie-authdaemon' EXIT

echo "Waiting for authentication."
until [[ -s .git-credential-cache/cookie ]]; do sleep 1; done

if [[ ! -d ./esp ]]; then
  echo "Cloning Extensible Service Proxy source."
  git clone https://gcp-apis.googlesource.com/esp
else
  echo "Clearing submodules."
  (cd ./esp \
     && git submodule deinit --force . \
     && rm -rf .git/modules/*
  )
  echo "Updating Extensible Service Proxy source."
  (cd ./esp \
     && git fetch origin \
     && git checkout master \
     && git reset --hard origin/master
  )
fi

cd ./esp

if [[ "x${FETCH}" != "x" ]]; then
  echo "Fetching ${FETCH}."
  (git fetch origin ${FETCH} && git checkout FETCH_HEAD)
fi

echo "Updating submodules."
git submodule update --recursive --init

echo "Git setup done."
