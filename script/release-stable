#!/bin/bash
#
# Copyright (C) Extensible Service Proxy Authors
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
################################################################################
#

ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
. ${ROOT}/script/all-utilities || { echo "Cannot load Bash utilities"; exit 1; }

function usage() {
  [[ -n "${1}" ]] && echo "${1}"
  cat << END_USAGE

Usage: ${BASH_SOURCE[0]} -g <path_to_gcloud> -r <DIRECT_REPO>

This script will release stable ESP docker image with format of:
  b.gcr.io/endpoints/endpoints-runtime:\${MINOR_BASE_VERSION}
  b.gcr.io/endpoints/endpoints-runtime:\${MAJOR_BASE_VERSION}
  b.gcr.io/endpoints/endpoints-runtime:lastest
where:
  MINOR_BASE_VERSION=major.minor
  MAJOR_BASE_VERSION=major

And mark debian package <DIRECT_REPO> in rapture as stable.

END_USAGE
  exit 1
}

GCLOUD=$(which gcloud) || GCLOUD=~/google-cloud-sdk/bin/gcloud
DEBIAN_PACKAGE_REPOSITORY=''

while getopts :g:r: arg; do
  case ${arg} in
    g) GCLOUD="${OPTARG}";;
    r) DEBIAN_PACKAGE_REPOSITORY="${OPTARG}";;
    *) usage "Invalid option: -${OPTARG}";;
  esac
done

[[ -x "${GCLOUD}" ]] \
  || usage "Cannot find gcloud, provide it via '-g' flag."
[[ -n "${DEBIAN_PACKAGE_REPOSITORY}" ]] \
  || usage "Please provide name of the Debian repository (DIRECT_REPO) via -r."

which rapture > /dev/null 2>&1 \
  || error_exit "rapture client not installed on this machine."

set -x

VERSION="$(command cat ${ROOT}/include/version)"
# Minor base is 1.0  if version is 1.0.0
MINOR_BASE_VERSION=${VERSION%.*}
# Major base is 1  if version is 1.0.0
MAJOR_BASE_VERSION=${MINOR_BASE_VERSION%.*}

function tag_stable_image() {
  local image="${1}"
  local stable="${2}"

  docker_tag_f "${image}" "${stable}"

  retry "${GCLOUD}" docker push "${stable}" \
    || error_exit "ERROR: failed to push '${stable}'"
}


for target in ${MINOR_BASE_VERSION} ${MAJOR_BASE_VERSION} latest; do
  tag_stable_image \
    "b.gcr.io/endpoints/endpoints-runtime:${VERSION}" \
    "b.gcr.io/endpoints/endpoints-runtime:${target}";
done

rapture --universe=cloud-apt settag ${DEBIAN_PACKAGE_REPOSITORY} \
  endpoints-dev.stable:true \
  || error_exit "ERROR: failed to mark the debian package '${DEBIAN_PACKAGE_REPOSITORY}' as stable"

printf '\e[31m
***************************************************************************
*      Please paste the script output verbatim into the release bug.      *
***************************************************************************
\e[0m'
