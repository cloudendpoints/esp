#!/bin/bash
#
# Copyright (C) Extensible Service Proxy Authors
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
################################################################################
#

ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
. ${ROOT}/script/all-utilities || { echo "Cannot load Bash utilities"; exit 1; }

# This script will create a tag for a release branch.

function usage() {
  [[ -n "${1}" ]] && echo "${1}"
  cat <<EOF
usage: ${BASH_SOURCE[0]} -t <tag git ref> -b <build git ref>"

tag git ref: commit which to tag with the release
    (typically release branch HEAD)
build git ref: commit at which the build was produced
    this is typically used when subsequent commits (such as changelog)
    were made in the release branch after the release build was produced.

example:
${BASH_SOURCE[0]} \\
    -t HEAD \\
    -b be2eb101f1b1b3e671e852656066c2909c41049b
EOF
  exit 1
}

BUILD_REF=''
TAG_REF=''

while getopts :b:t: arg; do
  case ${arg} in
    b) BUILD_REF="${OPTARG}";;
    t) TAG_REF="${OPTARG}";;
    *) usage "Invalid option: -${OPTARG}";;
  esac
done

[[ -n "${BUILD_REF}" ]] \
  || usage "Please provide the release build ref via '-b' parameter."
[[ -n "${TAG_REF}" ]] \
  || usage "Please provide the release tag ref via '-t' parameter."

BUILD_SHA=$(git rev-parse --verify "${BUILD_REF}") \
  || usage "Invalid Git reference \"${BUILD_REF}\"."
TAG_SHA=$(git rev-parse --verify "${TAG_REF}") \
  || usage "Invalid Git reference \"${TAG_REF}\"."

VERSION="$(command cat ${ROOT}/src/nginx/version)" \
  || usage "Cannot determine release version (${ROOT}/src/nginx/version)."
# Prefix 'v' for the tag name
VERSION_TAG="v${VERSION}"

set -x

git tag --annotate --force --file=- ${VERSION_TAG} ${TAG_SHA} <<EOF
Endpoints Runtime Release ${VERSION}

The release build was produced at ${BUILD_SHA}.
The Docker image released is:
  gcr.io/endpoints-release/endpoints-runtime:${VERSION}
EOF

# Check the version is correct.
git show -q ${VERSION_TAG}

{ set +x; } 2>/dev/null

printf "\\e[31m
You are about to push the tag ${VERSION_TAG} for ${TAG_SHA} to origin.
Once pushed, the tag cannot be removed. Are you sure? [Y/N] \\e[0m"

read yn
if [[ "${yn}" != "y" && "${yn}" != "Y" ]]; then
  echo "Aborting."
  exit 1
fi

# Push the tag to the server.
set -x
git push https://github.com/cloudendpoints/esp ${VERSION_TAG}
{ set +x; } 2>/dev/null

printf '\e[31m
***************************************************************************
*      Please paste the script output verbatim into the release bug.      *
***************************************************************************
\e[0m'
