#!/bin/bash
#
# Copyright (C) Extensible Service Proxy Authors
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
################################################################################
#

ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
. ${ROOT}/script/all-utilities || { echo "Cannot load Bash utilities"; exit 1; }

ESP_RELEASE_PROJECT=endpoints-release
STABLE_ESP_REPO=google-cloud-endpoints-jessie
DIRECT_REPO=''

function usage() {
  [[ -n "${1}" ]] && echo "${1}"
  cat << END_USAGE

Usage: ${BASH_SOURCE[0]} [-r <DIRECT_REPO>]

This script will show all release ESP image tags, and stable rapture tag
If DIRECT_REPO is specified, show that tag too.

END_USAGE
  exit 1
}


while getopts :r: arg; do
  case ${arg} in
    r) DIRECT_REPO="${OPTARG}";;
    *) usage "Invalid option: -${OPTARG}";;
  esac
done

function list_image_tags() {
  local image="gcr.io/${ESP_RELEASE_PROJECT}/$1"
  echo "show tags for ${image}"
  gcloud container images list-tags ${image} --project ${ESP_RELEASE_PROJECT}
}

list_image_tags "endpoints-runtime"
list_image_tags "endpoints-runtime-secure"
list_image_tags "endpoints-runtime-serverless"

function rapture_show_repo() {
  local repo="$1"
  echo "rapture ${repo}"
  rapture --universe=cloud-apt showrepo "${repo}"
}

rapture_show_repo "${STABLE_ESP_REPO}"
[[ -n "${DIRECT_REPO}" ]] && {
  rapture_show_repo ${DIRECT_REPO}
}

printf '\e[31m
***************************************************************************
*      Please paste the script output verbatim into the release bug.      *
***************************************************************************
\e[0m'
