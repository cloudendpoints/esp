# Auto-generated by start_esp
# Copyright (C) Extensible Service Proxy Authors
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

service_config_rollout {
% for file_full_path, percentage  in service_configs.iteritems():
  traffic_percentages {
    key: "${file_full_path}"
    value: ${percentage}
  }
% endfor
% if rollout_id:
  rollout_id: "${rollout_id}"
% endif
}
% if management:
service_management_config {
  url: "${management}"
}
% endif
% if service_control_url_override or log_request_headers or log_response_headers:
service_control_config {
  %if service_control_url_override:
  url_override: "${service_control_url_override}"
  % endif
  % if log_request_headers:
  % for log_request_header in log_request_headers:
  log_request_header: "${log_request_header}"
  % endfor
  % endif
  % if log_response_headers:
  % for log_response_header in log_response_headers:
  log_response_header: "${log_response_header}"
  % endfor
  % endif
}
% endif
% if client_ip_header:
client_ip_extraction_config {
  client_ip_header: "${client_ip_header}"
  client_ip_position: ${client_ip_position}
}
% endif
experimental {
  disable_log_status: true
% if always_print_primitive_fields:
  always_print_primitive_fields: true
% endif
}
% if disable_cloud_trace_auto_sampling or cloud_trace_url_override:
cloud_tracing_config {
  % if cloud_trace_url_override:
  url_override: "${cloud_trace_url_override}"
  % endif
  % if disable_cloud_trace_auto_sampling:
  samling_config {
    minimum_qps: 0
  }
  % endif
}
% endif
% if rewrite_rules:
api_service_config {
% for rewrite_rule  in rewrite_rules:
  rewrite: "${rewrite_rule}"
% endfor
}
% endif
rollout_strategy: "${rollout_strategy}"
% if metadata_attributes:
metadata_attributes {
${metadata_attributes}
}
% endif
