producer_project_id: "<YOUR_PROJECT_ID>"
name: "<YOUR_PROJECT_ID>.appspot.com"
id: "2016-08-25r1"
title: "Bookstore API"
apis {
  name: "endpoints.examples.bookstore.Bookstore"
  methods {
    name: "ListShelves"
    request_type_url: "type.googleapis.com/google.protobuf.Empty"
    response_type_url: "type.googleapis.com/endpoints.examples.bookstore.ListShelvesResponse"
  }
  methods {
    name: "CreateShelf"
    request_type_url: "type.googleapis.com/endpoints.examples.bookstore.CreateShelfRequest"
    response_type_url: "type.googleapis.com/endpoints.examples.bookstore.Shelf"
  }
  methods {
    name: "BulkCreateShelf"
    request_type_url: "type.googleapis.com/endpoints.examples.bookstore.CreateShelfRequest"
    request_streaming: true
    response_type_url: "type.googleapis.com/endpoints.examples.bookstore.Shelf"
    response_streaming: true
  }
  methods {
    name: "GetShelf"
    request_type_url: "type.googleapis.com/endpoints.examples.bookstore.GetShelfRequest"
    response_type_url: "type.googleapis.com/endpoints.examples.bookstore.Shelf"
  }
  methods {
    name: "DeleteShelf"
    request_type_url: "type.googleapis.com/endpoints.examples.bookstore.DeleteShelfRequest"
    response_type_url: "type.googleapis.com/google.protobuf.Empty"
  }
  methods {
    name: "ListBooks"
    request_type_url: "type.googleapis.com/endpoints.examples.bookstore.ListBooksRequest"
    response_type_url: "type.googleapis.com/endpoints.examples.bookstore.ListBooksResponse"
  }
  methods {
    name: "CreateBook"
    request_type_url: "type.googleapis.com/endpoints.examples.bookstore.CreateBookRequest"
    response_type_url: "type.googleapis.com/endpoints.examples.bookstore.Book"
  }
  methods {
    name: "GetBook"
    request_type_url: "type.googleapis.com/endpoints.examples.bookstore.GetBookRequest"
    response_type_url: "type.googleapis.com/endpoints.examples.bookstore.Book"
  }
  methods {
    name: "DeleteBook"
    request_type_url: "type.googleapis.com/endpoints.examples.bookstore.DeleteBookRequest"
    response_type_url: "type.googleapis.com/google.protobuf.Empty"
  }
  methods {
    name: "QueryShelves"
    request_type_url: "type.googleapis.com/endpoints.examples.bookstore.QueryShelvesRequest"
    response_type_url: "type.googleapis.com/endpoints.examples.bookstore.ListShelvesResponse"
  }
  methods {
    name: "QueryBooks"
    request_type_url: "type.googleapis.com/endpoints.examples.bookstore.QueryBooksRequest"
    response_type_url: "type.googleapis.com/endpoints.examples.bookstore.ListBooksResponse"
  }
  methods {
    name: "EchoStruct"
    request_type_url: "type.googleapis.com/google.protobuf.Struct"
    response_type_url: "type.googleapis.com/google.protobuf.Struct"
  }
  methods {
    name: "EchoShelfId"
    request_type_url: "type.googleapis.com/endpoints.examples.bookstore.ShelfId"
    response_type_url: "type.googleapis.com/endpoints.examples.bookstore.ShelfId"
  }
  methods {
    name: "GetUnknownBook"
    request_type_url: "type.googleapis.com/google.protobuf.Empty"
    response_type_url: "type.googleapis.com/endpoints.examples.bookstore.UnknownBook"
  }
  version: "v1"
  source_context {
    file_name: "bookstore.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "google.protobuf.Empty"
  source_context {
    file_name: "google/protobuf/empty.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "google.protobuf.Struct"
  fields {
    kind: TYPE_MESSAGE
    cardinality: CARDINALITY_REPEATED
    number: 1
    name: "fields"
    type_url: "type.googleapis.com/google.protobuf.Struct.FieldsEntry"
    json_name: "fields"
  }
  source_context {
    file_name: "google/protobuf/struct.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "google.protobuf.Struct.FieldsEntry"
  fields {
    kind: TYPE_STRING
    cardinality: CARDINALITY_OPTIONAL
    number: 1
    name: "key"
    json_name: "key"
  }
  fields {
    kind: TYPE_MESSAGE
    cardinality: CARDINALITY_OPTIONAL
    number: 2
    name: "value"
    type_url: "type.googleapis.com/google.protobuf.Value"
    json_name: "value"
  }
  options {
    name: "proto2.MessageOptions.map_entry"
    value {
      type_url: "type.googleapis.com/google.protobuf.BoolValue"
      value: "\010\001"
    }
  }
  source_context {
    file_name: "google/protobuf/struct.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "google.protobuf.Value"
  fields {
    kind: TYPE_ENUM
    cardinality: CARDINALITY_OPTIONAL
    number: 1
    name: "null_value"
    type_url: "type.googleapis.com/google.protobuf.NullValue"
    oneof_index: 1
    json_name: "nullValue"
  }
  fields {
    kind: TYPE_DOUBLE
    cardinality: CARDINALITY_OPTIONAL
    number: 2
    name: "number_value"
    oneof_index: 1
    json_name: "numberValue"
  }
  fields {
    kind: TYPE_STRING
    cardinality: CARDINALITY_OPTIONAL
    number: 3
    name: "string_value"
    oneof_index: 1
    json_name: "stringValue"
  }
  fields {
    kind: TYPE_BOOL
    cardinality: CARDINALITY_OPTIONAL
    number: 4
    name: "bool_value"
    oneof_index: 1
    json_name: "boolValue"
  }
  fields {
    kind: TYPE_MESSAGE
    cardinality: CARDINALITY_OPTIONAL
    number: 5
    name: "struct_value"
    type_url: "type.googleapis.com/google.protobuf.Struct"
    oneof_index: 1
    json_name: "structValue"
  }
  fields {
    kind: TYPE_MESSAGE
    cardinality: CARDINALITY_OPTIONAL
    number: 6
    name: "list_value"
    type_url: "type.googleapis.com/google.protobuf.ListValue"
    oneof_index: 1
    json_name: "listValue"
  }
  oneofs: "kind"
  source_context {
    file_name: "google/protobuf/struct.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "google.protobuf.ListValue"
  fields {
    kind: TYPE_MESSAGE
    cardinality: CARDINALITY_REPEATED
    number: 1
    name: "values"
    type_url: "type.googleapis.com/google.protobuf.Value"
    json_name: "values"
  }
  source_context {
    file_name: "google/protobuf/struct.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "endpoints.examples.bookstore.Shelf"
  fields {
    kind: TYPE_INT64
    cardinality: CARDINALITY_OPTIONAL
    number: 1
    name: "id"
    json_name: "id"
  }
  fields {
    kind: TYPE_STRING
    cardinality: CARDINALITY_OPTIONAL
    number: 2
    name: "theme"
    json_name: "theme"
  }
  source_context {
    file_name: "bookstore.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "endpoints.examples.bookstore.Book"
  fields {
    kind: TYPE_INT64
    cardinality: CARDINALITY_OPTIONAL
    number: 1
    name: "id"
    json_name: "id"
  }
  fields {
    kind: TYPE_STRING
    cardinality: CARDINALITY_OPTIONAL
    number: 2
    name: "author"
    json_name: "author"
  }
  fields {
    kind: TYPE_STRING
    cardinality: CARDINALITY_OPTIONAL
    number: 3
    name: "title"
    json_name: "title"
  }
  fields {
    kind: TYPE_STRING
    cardinality: CARDINALITY_REPEATED
    number: 4
    name: "quotes"
    json_name: "quotes"
  }
  source_context {
    file_name: "bookstore.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "endpoints.examples.bookstore.ListShelvesResponse"
  fields {
    kind: TYPE_MESSAGE
    cardinality: CARDINALITY_REPEATED
    number: 1
    name: "shelves"
    type_url: "type.googleapis.com/endpoints.examples.bookstore.Shelf"
    json_name: "shelves"
  }
  source_context {
    file_name: "bookstore.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "endpoints.examples.bookstore.CreateShelfRequest"
  fields {
    kind: TYPE_MESSAGE
    cardinality: CARDINALITY_OPTIONAL
    number: 1
    name: "shelf"
    type_url: "type.googleapis.com/endpoints.examples.bookstore.Shelf"
    json_name: "shelf"
  }
  source_context {
    file_name: "bookstore.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "endpoints.examples.bookstore.GetShelfRequest"
  fields {
    kind: TYPE_INT64
    cardinality: CARDINALITY_OPTIONAL
    number: 1
    name: "shelf"
    json_name: "shelf"
  }
  source_context {
    file_name: "bookstore.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "endpoints.examples.bookstore.DeleteShelfRequest"
  fields {
    kind: TYPE_INT64
    cardinality: CARDINALITY_OPTIONAL
    number: 1
    name: "shelf"
    json_name: "shelf"
  }
  source_context {
    file_name: "bookstore.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "endpoints.examples.bookstore.ListBooksRequest"
  fields {
    kind: TYPE_INT64
    cardinality: CARDINALITY_OPTIONAL
    number: 1
    name: "shelf"
    json_name: "shelf"
  }
  source_context {
    file_name: "bookstore.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "endpoints.examples.bookstore.ListBooksResponse"
  fields {
    kind: TYPE_MESSAGE
    cardinality: CARDINALITY_REPEATED
    number: 1
    name: "books"
    type_url: "type.googleapis.com/endpoints.examples.bookstore.Book"
    json_name: "books"
  }
  source_context {
    file_name: "bookstore.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "endpoints.examples.bookstore.CreateBookRequest"
  fields {
    kind: TYPE_INT64
    cardinality: CARDINALITY_OPTIONAL
    number: 1
    name: "shelf"
    json_name: "shelf"
  }
  fields {
    kind: TYPE_MESSAGE
    cardinality: CARDINALITY_OPTIONAL
    number: 2
    name: "book"
    type_url: "type.googleapis.com/endpoints.examples.bookstore.Book"
    json_name: "book"
  }
  source_context {
    file_name: "bookstore.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "endpoints.examples.bookstore.GetBookRequest"
  fields {
    kind: TYPE_INT64
    cardinality: CARDINALITY_OPTIONAL
    number: 1
    name: "shelf"
    json_name: "shelf"
  }
  fields {
    kind: TYPE_INT64
    cardinality: CARDINALITY_OPTIONAL
    number: 2
    name: "book"
    json_name: "book"
  }
  source_context {
    file_name: "bookstore.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "endpoints.examples.bookstore.DeleteBookRequest"
  fields {
    kind: TYPE_INT64
    cardinality: CARDINALITY_OPTIONAL
    number: 1
    name: "shelf"
    json_name: "shelf"
  }
  fields {
    kind: TYPE_INT64
    cardinality: CARDINALITY_OPTIONAL
    number: 2
    name: "book"
    json_name: "book"
  }
  source_context {
    file_name: "bookstore.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "endpoints.examples.bookstore.QueryShelvesRequest"
  fields {
    kind: TYPE_MESSAGE
    cardinality: CARDINALITY_OPTIONAL
    number: 1
    name: "shelf"
    type_url: "type.googleapis.com/endpoints.examples.bookstore.Shelf"
    json_name: "shelf"
  }
  source_context {
    file_name: "bookstore.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "endpoints.examples.bookstore.QueryBooksRequest"
  fields {
    kind: TYPE_INT64
    cardinality: CARDINALITY_OPTIONAL
    number: 1
    name: "shelf"
    json_name: "shelf"
  }
  fields {
    kind: TYPE_MESSAGE
    cardinality: CARDINALITY_OPTIONAL
    number: 2
    name: "book"
    type_url: "type.googleapis.com/endpoints.examples.bookstore.Book"
    json_name: "book"
  }
  source_context {
    file_name: "bookstore.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "endpoints.examples.bookstore.ShelfNotFoundDetail"
  fields {
    kind: TYPE_INT64
    cardinality: CARDINALITY_OPTIONAL
    number: 1
    name: "for_shelf_id"
    json_name: "forShelfId"
  }
  fields {
    kind: TYPE_STRING
    cardinality: CARDINALITY_OPTIONAL
    number: 2
    name: "why"
    json_name: "why"
  }
  source_context {
    file_name: "bookstore.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "endpoints.examples.bookstore.ShelfId"
  fields {
    kind: TYPE_INT64
    cardinality: CARDINALITY_OPTIONAL
    number: 1
    name: "shelf_id"
    json_name: "shelfId"
  }
  source_context {
    file_name: "bookstore.proto"
  }
  syntax: SYNTAX_PROTO3
}
types {
  name: "endpoints.examples.bookstore.UnknownBook"
  fields {
    kind: TYPE_INT64
    cardinality: CARDINALITY_OPTIONAL
    number: 2
    name: "known_int"
    json_name: "knownInt"
  }
  fields {
    kind: TYPE_STRING
    cardinality: CARDINALITY_OPTIONAL
    number: 3
    name: "known_str"
    json_name: "knownStr"
  }
  source_context {
    file_name: "bookstore.proto"
  }
  syntax: SYNTAX_PROTO3
}
enums {
  name: "google.protobuf.NullValue"
  enumvalue {
    name: "NULL_VALUE"
  }
  source_context {
    file_name: "google/protobuf/struct.proto"
  }
  syntax: SYNTAX_PROTO3
}
backend {
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.ListShelves"
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.CreateShelf"
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.BulkCreateShelf"
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.GetShelf"
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.DeleteShelf"
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.ListBooks"
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.CreateBook"
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.GetBook"
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.DeleteBook"
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.QueryShelves"
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.QueryBooks"
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.EchoStruct"
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.EchoShelfId"
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.GetUnknownBook"
  }
}
http {
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.ListShelves"
    get: "/shelves"
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.CreateShelf"
    post: "/shelves"
    body: "shelf"
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.BulkCreateShelf"
    post: "/bulk/shelves"
    body: "shelf"
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.GetShelf"
    get: "/shelves/{shelf}"
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.DeleteShelf"
    delete: "/shelves/{shelf}"
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.ListBooks"
    get: "/shelves/{shelf}/books"
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.CreateBook"
    post: "/shelves/{shelf}/books"
    body: "book"
    additional_bindings {
      post: "/shelves/{shelf}/books/{book.id}/{book.author}"
      body: "book.title"
    }
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.GetBook"
    get: "/shelves/{shelf}/books/{book}"
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.DeleteBook"
    delete: "/shelves/{shelf}/books/{book}"
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.QueryShelves"
    get: "/query/shelves"
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.QueryBooks"
    get: "/query/books"
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.EchoStruct"
    post: "/echostruct"
    body: "*"
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.EchoShelfId"
    post: "/echoshelfid"
    body: "*"
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.GetUnknownBook"
    get: "/unknownbook"
  }
}
config_version {
  value: 3
}
control {
  environment: "servicecontrol.googleapis.com"
}
system_parameters {
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.ListShelves"
    parameters {
      name: "api_key"
      http_header: "x-api-key"
    }
    parameters {
      name: "api_key"
      url_query_parameter: "key"
    }
    parameters {
      name: "api_key"
      url_query_parameter: "api_key"
    }
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.CreateShelf"
    parameters {
      name: "api_key"
      http_header: "x-api-key"
    }
    parameters {
      name: "api_key"
      url_query_parameter: "key"
    }
    parameters {
      name: "api_key"
      url_query_parameter: "api_key"
    }
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.BulkCreateShelf"
    parameters {
      name: "api_key"
      http_header: "x-api-key"
    }
    parameters {
      name: "api_key"
      url_query_parameter: "key"
    }
    parameters {
      name: "api_key"
      url_query_parameter: "api_key"
    }
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.GetShelf"
    parameters {
      name: "api_key"
      http_header: "x-api-key"
    }
    parameters {
      name: "api_key"
      url_query_parameter: "key"
    }
    parameters {
      name: "api_key"
      url_query_parameter: "api_key"
    }
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.DeleteShelf"
    parameters {
      name: "api_key"
      http_header: "x-api-key"
    }
    parameters {
      name: "api_key"
      url_query_parameter: "key"
    }
    parameters {
      name: "api_key"
      url_query_parameter: "api_key"
    }
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.ListBooks"
    parameters {
      name: "api_key"
      http_header: "x-api-key"
    }
    parameters {
      name: "api_key"
      url_query_parameter: "key"
    }
    parameters {
      name: "api_key"
      url_query_parameter: "api_key"
    }
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.CreateBook"
    parameters {
      name: "api_key"
      http_header: "x-api-key"
    }
    parameters {
      name: "api_key"
      url_query_parameter: "key"
    }
    parameters {
      name: "api_key"
      url_query_parameter: "api_key"
    }
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.GetBook"
    parameters {
      name: "api_key"
      http_header: "x-api-key"
    }
    parameters {
      name: "api_key"
      url_query_parameter: "key"
    }
    parameters {
      name: "api_key"
      url_query_parameter: "api_key"
    }
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.DeleteBook"
    parameters {
      name: "api_key"
      http_header: "x-api-key"
    }
    parameters {
      name: "api_key"
      url_query_parameter: "key"
    }
    parameters {
      name: "api_key"
      url_query_parameter: "api_key"
    }
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.QueryShelves"
    parameters {
      name: "api_key"
      http_header: "x-api-key"
    }
    parameters {
      name: "api_key"
      url_query_parameter: "key"
    }
    parameters {
      name: "api_key"
      url_query_parameter: "api_key"
    }
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.QueryBooks"
    parameters {
      name: "api_key"
      http_header: "x-api-key"
    }
    parameters {
      name: "api_key"
      url_query_parameter: "key"
    }
    parameters {
      name: "api_key"
      url_query_parameter: "api_key"
    }
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.EchoStruct"
    parameters {
      name: "api_key"
      http_header: "x-api-key"
    }
    parameters {
      name: "api_key"
      url_query_parameter: "key"
    }
    parameters {
      name: "api_key"
      url_query_parameter: "api_key"
    }
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.EchoShelfId"
    parameters {
      name: "api_key"
      http_header: "x-api-key"
    }
    parameters {
      name: "api_key"
      url_query_parameter: "key"
    }
    parameters {
      name: "api_key"
      url_query_parameter: "api_key"
    }
  }
  rules {
    selector: "endpoints.examples.bookstore.Bookstore.GetUnknownBook"
    parameters {
      name: "api_key"
      http_header: "x-api-key"
    }
    parameters {
      name: "api_key"
      url_query_parameter: "key"
    }
    parameters {
      name: "api_key"
      url_query_parameter: "api_key"
    }
  }
}
