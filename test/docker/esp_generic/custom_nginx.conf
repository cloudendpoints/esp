daemon off;

worker_processes auto;

events {
  worker_connections 4096;
  multi_accept on;
}

error_log stderr debug;

http {
  include /etc/nginx/mime.types;
  server_tokens off;

  # set max body size to 32m as appengine supports.
  client_max_body_size 32m;

  tcp_nodelay on;
  tcp_nopush on;

  keepalive_requests 10000;

  upstream app_server {
    server app:8080;
  }

  upstream metadata_server {
    server metadata:8080;
  }

  upstream service_control {
    server control:8080;
  }

  geo $source_type {
    default ext;
    127.0.0.0/8 lo;
    169.254.0.0/16 sb;
    130.211.0.0/22 lb;
    172.16.0.0/12 do;
  }

  endpoints {
    metadata_server http://metadata_server;
  }

  server {
    # Running port
    listen 8080;

    # Allow more space for request headers.
    large_client_header_buffers 4 16k;

    access_log /dev/stdout;

    location / {

      endpoints {
        on;
        server_config /etc/nginx/server_config.pb.txt;
        service_control http://service_control;
      }

      # configuration settings for proxy_pass to main app
      proxy_pass http://app_server;
      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Google-Real-IP $remote_addr;
      # 86400 seconds (24 hours) is the maximum a server is allowed.
      proxy_send_timeout 86400s;
      proxy_read_timeout 86400s;
    }

    include /var/lib/nginx/extra/*.conf;
  }

  server {
    # expose /nginx_status but on a different port (8090) to avoid
    # external visibility / conflicts with the app.
    listen 8090;

    location /nginx_status {
      stub_status on;
      access_log off;
    }

    location / {
      root /dev/null;
    }
  }

  # Output nginx access logs in the standard format, plus an additional
  # field containing the "X-Cloud-Trace-Context" header at the end.
  log_format tracecontext '$remote_addr - $remote_user [$time_local] '
                          '"$request" $status $body_bytes_sent '
                          '"$http_referer" "$http_user_agent" '
                          'tracecontext="$http_x_cloud_trace_context"';

  access_log /var/log/nginx/access.log tracecontext;
}
