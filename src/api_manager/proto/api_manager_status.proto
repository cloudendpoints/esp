// Copyright (C) Extensible Service Proxy Authors
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
////////////////////////////////////////////////////////////////////////////////
//
// This file contains proto representations of the JSON output of ESP's status.

syntax = "proto3";

package google.api_manager.proto;

// Proto representation of ::esp::common::ServiceControlStatistics
message ServiceControlStatistics {
  // Total number of Check() calls received.
  uint64 total_called_checks = 1;
  // Check sends to server from flushed cache items.
  uint64 send_checks_by_flush = 2;
  // Check sends to remote sever during Check() calls.
  uint64 send_checks_in_flight = 3;

  // Total number of Report() calls received.
  uint64 total_called_reports = 4;
  // Report sends to server from flushed cache items.
  uint64 send_reports_by_flush = 5;
  // Report sends to remote sever during Report() calls.
  uint64 send_reports_in_flight = 6;

  // The number of operations send, each input report has only 1 operation, but
  // each report send to server may have multiple operations. The ratio of
  // send_report_operations / total_called_reports  will reflect report
  // aggregation rate.  send_report_operations may not reflect aggregation rate.
  uint64 send_report_operations = 7;
}

// Status for ESP instances
message EspStatus {
  // Service name
  string service_name = 1;

  // Statistics from service control client
  ServiceControlStatistics service_control_statistics = 2;
}
