// Copyright (C) Extensible Service Proxy Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
////////////////////////////////////////////////////////////////////////////////
//
// This file contains proto representations of the JSON output of ESP's status.

syntax = "proto3";

package google.api_manager.proto;

// Proto representation of ::esp::common::ServiceControlStatistics
message ServiceControlStatistics {
  // Total number of Check() calls received.
  uint64 total_called_checks = 1;
  // Check sends to server from flushed cache items.
  uint64 send_checks_by_flush = 2;
  // Check sends to remote sever during Check() calls.
  uint64 send_checks_in_flight = 3;

  // Total number of Report() calls received.
  uint64 total_called_reports = 4;
  // Report sends to server from flushed cache items.
  uint64 send_reports_by_flush = 5;
  // Report sends to remote sever during Report() calls.
  uint64 send_reports_in_flight = 6;

  // The number of operations send, each input report has only 1 operation, but
  // each report send to server may have multiple operations. The ratio of
  // send_report_operations / total_called_reports  will reflect report
  // aggregation rate.  send_report_operations may not reflect aggregation rate.
  uint64 send_report_operations = 7;

  // Maximum report size send to server.
  uint64 max_report_size = 8;
}

// Maps service configuration IDs to their corresponding traffic percentage.
// Key is the service configuration ID, Value is the traffic percentage
message ServiceConfigRollouts {
  string rollout_id = 1;
  map<string, uint64> percentages = 2;
}

// Status for ESP instances
message EspStatus {
  // Service name
  string service_name = 1;

  // Statistics from service control client
  ServiceControlStatistics service_control_statistics = 2;

  // ESP rollouts
  ServiceConfigRollouts service_config_rollouts = 9;
}
