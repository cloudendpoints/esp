#!/bin/bash
#
# Copyright (C) Extensible Service Proxy Authors
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
################################################################################
#

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
ESP_ROOT="$(cd "${DIR}/../.." && pwd)"

. "${ESP_ROOT}"/script/jenkins-utilities || { echo "Cannot load Jenkins utilities" ; exit 1 ; }

echo 'Verifying Docker Install'
run docker info || error_exit 'Docker is not installed properly'
run docker version || error_exit 'Docker is not installed properly'
run docker run hello-world || error_exit 'Docker is not installed properly'

echo 'Verifying Bazel installation'
run bazel version || error_exit 'Bazel is not installed properly'

echo 'Verifying gcloud installation'
run gcloud version || error_exit 'gcloud is not installed properly'

echo 'Verifying kubectl installation'
run kubectl version || error_exit 'kubectl is not installed properly'

echo 'Verifying gsutil installation'
run gsutil version || error_exit 'gsutil is not installed properly'

echo 'Verifying that WRK is installed'
[[ -f /usr/local/bin/wrk ]] || error_exit 'wrk is not installed properly'

echo 'Verifying that the user is jenkins'
THIS_USER="$(whoami)"
[[ "${THIS_USER}" == 'jenkins' ]] || error_exit 'Slaves should be running as jenkins user'
